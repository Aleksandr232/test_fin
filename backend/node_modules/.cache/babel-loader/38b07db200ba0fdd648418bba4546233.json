{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBlockedPage = isBlockedPage;\nexports.cleanAmpPath = cleanAmpPath;\nexports.isBot = isBot;\nexports.isTargetLikeServerless = isTargetLikeServerless;\nexports.stripInternalQueries = stripInternalQueries;\nexports.shouldUseReactRoot = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _constants = require(\"../shared/lib/constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isBlockedPage(pathname) {\n  return _constants.BLOCKED_PAGES.includes(pathname);\n}\n\nfunction cleanAmpPath(pathname) {\n  if (pathname.match(/\\?amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/\\?amp=(y|yes|true|1)&?/, \"?\");\n  }\n\n  if (pathname.match(/&amp=(y|yes|true|1)/)) {\n    pathname = pathname.replace(/&amp=(y|yes|true|1)/, \"\");\n  }\n\n  pathname = pathname.replace(/\\?$/, \"\");\n  return pathname;\n}\n\nfunction isBot(userAgent) {\n  return /Googlebot|Mediapartners-Google|AdsBot-Google|googleweblight|Storebot-Google|Google-PageRenderer|Bingbot|BingPreview|Slurp|DuckDuckBot|baiduspider|yandex|sogou|LinkedInBot|bitlybot|tumblr|vkShare|quora link preview|facebookexternalhit|facebookcatalog|Twitterbot|applebot|redditbot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|ia_archiver/i.test(userAgent);\n}\n\nfunction isTargetLikeServerless(target) {\n  const isServerless = target === \"serverless\";\n  const isServerlessTrace = target === \"experimental-serverless-trace\";\n  return isServerless || isServerlessTrace;\n}\n\nfunction stripInternalQueries(query) {\n  delete query.__nextFallback;\n  delete query.__nextLocale;\n  delete query.__nextDefaultLocale;\n  delete query.__nextIsNotFound; // RSC\n\n  delete query.__flight__;\n  delete query.__props__; // routing\n\n  delete query.__flight_router_state_tree__;\n  return query;\n}\n\nconst shouldUseReactRoot = parseInt(_react.default.version) >= 18;\nexports.shouldUseReactRoot = shouldUseReactRoot;","map":{"version":3,"mappings":"AAAA;;;;;QAIgBA;QAIAC;QAWAC;QAMAC;QAMAC;;;AA9BE,UAAO,kCAAP,OAAO,EAAP;;AACY,cAAyB,WAAzB,yBAAyB,CAAzB;;;;;;;;AAEvB,SAASJ,aAAT,CAAuBK,QAAvB,EAAkD;EACvD,OAAOC,UAAa,cAAbA,CAAcC,QAAdD,CAAuBD,QAAvBC,CAAP;AACD;;AAEM,SAASL,YAAT,CAAsBI,QAAtB,EAAgD;EACrD,IAAIA,QAAQ,CAACG,KAATH,CAAc,sBAAdA,CAAJ,EAA4C;IAC1CA,QAAQ,GAAGA,QAAQ,CAACI,OAATJ,CAAgB,wBAAhBA,EAA2C,GAA3CA,CAAXA;EACD;;EACD,IAAIA,QAAQ,CAACG,KAATH,CAAc,qBAAdA,CAAJ,EAA2C;IACzCA,QAAQ,GAAGA,QAAQ,CAACI,OAATJ,CAAgB,qBAAhBA,EAAwC,EAAxCA,CAAXA;EACD;;EACDA,QAAQ,GAAGA,QAAQ,CAACI,OAATJ,CAAgB,KAAhBA,EAAwB,EAAxBA,CAAXA;EACA,OAAOA,QAAP;AACD;;AAEM,SAASH,KAAT,CAAeQ,SAAf,EAA2C;EAChD,OAAO,oVAAoVC,IAApV,CACLD,SADK,CAAP;AAGD;;AAEM,SAASP,sBAAT,CAAgCS,MAAhC,EAAgD;EACrD,MAAMC,YAAY,GAAGD,MAAM,KAAK,YAAhC;EACA,MAAME,iBAAiB,GAAGF,MAAM,KAAK,+BAArC;EACA,OAAOC,YAAY,IAAIC,iBAAvB;AACD;;AAEM,SAASV,oBAAT,CAA8BW,KAA9B,EAAyD;EAC9D,OAAOA,KAAK,CAACC,cAAb;EACA,OAAOD,KAAK,CAACE,YAAb;EACA,OAAOF,KAAK,CAACG,mBAAb;EACA,OAAOH,KAAK,CAACI,gBAAb,CAJ8D,CAM9D;;EACA,OAAOJ,KAAK,CAACK,UAAb;EACA,OAAOL,KAAK,CAACM,SAAb,CAR8D,CAS9D;;EACA,OAAON,KAAK,CAACO,4BAAb;EAEA,OAAOP,KAAP;AACD;;AAGM,MAAMQ,kBAAkB,GAAGC,QAAQ,CAACC,MAAK,QAALA,CAAMC,OAAP,CAARF,IAA2B,EAAtD;QAAMD","names":["isBlockedPage","cleanAmpPath","isBot","isTargetLikeServerless","stripInternalQueries","pathname","BLOCKED_PAGES","includes","match","replace","userAgent","test","target","isServerless","isServerlessTrace","query","__nextFallback","__nextLocale","__nextDefaultLocale","__nextIsNotFound","__flight__","__props__","__flight_router_state_tree__","shouldUseReactRoot","parseInt","React","version"],"sources":["../../server/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}